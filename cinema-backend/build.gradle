plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'pl.edu.pw.ee'
version = '0.0.1-SNAPSHOT'

def mapstructVer = '1.5.5.Final'
def cucumberVer = '6.10.4'
def jwtVer = '0.11.5'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    cucumberRuntime {
        extendsFrom testImplementation
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql'

    implementation "io.jsonwebtoken:jjwt-api:${jwtVer}"
    implementation "io.jsonwebtoken:jjwt-impl:${jwtVer}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jwtVer}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.mapstruct:mapstruct:${mapstructVer}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVer}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVer}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "io.cucumber:cucumber-java:${cucumberVer}"
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
